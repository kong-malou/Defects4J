diff --git a/src/main/java/org/apache/commons/csv/CSVLexer.java b/src/main/java/org/apache/commons/csv/CSVLexer.java
index 90b9c58..6baae59 100644
--- a/src/main/java/org/apache/commons/csv/CSVLexer.java
+++ b/src/main/java/org/apache/commons/csv/CSVLexer.java
@@ -160,12 +160,7 @@ final class CSVLexer extends Lexer {
                 tkn.type = TOKEN;
                 break;
             } else if (isEscape(c)) {
-                final int unescaped = readEscape();
-                if (unescaped == Constants.END_OF_STREAM) { // unexpected char after escape
-                    tkn.content.append((char) c).append((char) in.getLastChar());
-                } else {
-                    tkn.content.append((char) unescaped);
-                }
+                tkn.content.append((char) readEscape());
                 c = in.read(); // continue
             } else {
                 tkn.content.append((char) c);
@@ -208,12 +203,7 @@ final class CSVLexer extends Lexer {
             c = in.read();
 
             if (isEscape(c)) {
-                final int unescaped = readEscape();
-                if (unescaped == Constants.END_OF_STREAM) { // unexpected char after escape
-                    tkn.content.append((char) c).append((char) in.getLastChar());
-                } else {
-                    tkn.content.append((char) unescaped);
-                }
+                tkn.content.append((char) readEscape());
             } else if (isQuoteChar(c)) {
                 if (isQuoteChar(in.lookAhead())) {
                     // double or escaped encapsulator -> add single encapsulator to token
diff --git a/src/main/java/org/apache/commons/csv/Lexer.java b/src/main/java/org/apache/commons/csv/Lexer.java
index af99745..895e85d 100644
--- a/src/main/java/org/apache/commons/csv/Lexer.java
+++ b/src/main/java/org/apache/commons/csv/Lexer.java
@@ -98,21 +98,10 @@ abstract class Lexer {
             return BACKSPACE;
         case 'f':
             return FF;
-        case CR:
-        case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
-            return c;
         case END_OF_STREAM:
             throw new IOException("EOF whilst processing escape sequence");
         default:
-            // Now check for meta-characters
-            if (isDelimiter(c) || isEscape(c) || isQuoteChar(c) || isCommentStart(c)) {
-                return c;
-            }
-            // indicate unexpected char - available from in.getLastChar()
-            return END_OF_STREAM;
+            return c;
         }
     }
 
