diff --git a/src/test/java/com/fasterxml/jackson/databind/interop/DeprecatedTypeHandling1102Test.java b/src/test/java/com/fasterxml/jackson/databind/interop/DeprecatedTypeHandling1102Test.java
deleted file mode 100644
index b361b2a..0000000
--- a/src/test/java/com/fasterxml/jackson/databind/interop/DeprecatedTypeHandling1102Test.java
+++ /dev/null
@@ -1,90 +0,0 @@
-package com.fasterxml.jackson.databind.interop;
-
-import java.util.*;
-
-import com.fasterxml.jackson.databind.*;
-import com.fasterxml.jackson.databind.type.CollectionType;
-import com.fasterxml.jackson.databind.type.MapType;
-import com.fasterxml.jackson.databind.type.SimpleType;
-
-/**
- * Set of tests to ensure that changes between 2.6 and 2.7 can
- * be handled somewhat gracefully.
- */
-public class DeprecatedTypeHandling1102Test extends BaseMapTest
-{
-    static class Point {
-        public int x;
-
-        int _y;
-
-        public void setY(int y0) { _y = y0; }
-        public int getY() { return _y; }
-    }
-
-    static class Point3D extends Point {
-        public int z;
-    }
-    
-    final ObjectMapper MAPPER = objectMapper();
-
-    @SuppressWarnings("deprecation")
-    public void testSimplePOJOType() throws Exception
-    {
-        JavaType elem = SimpleType.construct(Point.class);
-
-        Point p = MAPPER.readValue(aposToQuotes("{'x':1,'y':2}"), elem);
-        assertNotNull(p);
-        assertEquals(1, p.x);
-        assertEquals(2, p.getY());
-    }
-
-    @SuppressWarnings("deprecation")
-    public void testPOJOSubType() throws Exception
-    {
-        JavaType elem = SimpleType.construct(Point3D.class);
-
-        Point3D p = MAPPER.readValue(aposToQuotes("{'x':1,'z':3,'y':2}"), elem);
-        assertNotNull(p);
-        assertEquals(1, p.x);
-        assertEquals(2, p.getY());
-        assertEquals(3, p.z);
-    }
-    
-    @SuppressWarnings("deprecation")
-    public void testExplicitCollectionType() throws Exception
-    {
-        JavaType elem = SimpleType.construct(Point.class);
-        JavaType t = CollectionType.construct(List.class, elem);
-
-        final String json = aposToQuotes("[ {'x':1,'y':2}, {'x':3,'y':6 }]");        
-
-        List<Point> l = MAPPER.readValue(json, t);
-        assertNotNull(l);
-        assertEquals(2, l.size());
-        Object ob = l.get(0);
-        assertEquals(Point.class, ob.getClass());
-        Point p = (Point) ob;
-        assertEquals(1, p.x);
-        assertEquals(2, p.getY());
-    }
-
-    @SuppressWarnings("deprecation")
-    public void testExplicitMapType() throws Exception
-    {
-        JavaType key = SimpleType.construct(String.class);
-        JavaType elem = SimpleType.construct(Point.class);
-        JavaType t = MapType.construct(Map.class, key, elem);
-
-        final String json = aposToQuotes("{'x':{'x':3,'y':5}}");        
-
-        Map<String,Point> m = MAPPER.readValue(json, t);
-        assertNotNull(m);
-        assertEquals(1, m.size());
-        Object ob = m.values().iterator().next();
-        assertEquals(Point.class, ob.getClass());
-        Point p = (Point) ob;
-        assertEquals(3, p.x);
-        assertEquals(5, p.getY());
-    }
-}
diff --git a/src/test/java/com/fasterxml/jackson/failing/DeprecatedTypeHandling1102Test.java b/src/test/java/com/fasterxml/jackson/failing/DeprecatedTypeHandling1102Test.java
new file mode 100644
index 0000000..d07ea3e
--- /dev/null
+++ b/src/test/java/com/fasterxml/jackson/failing/DeprecatedTypeHandling1102Test.java
@@ -0,0 +1,53 @@
+package com.fasterxml.jackson.failing;
+
+import java.util.List;
+
+import com.fasterxml.jackson.databind.*;
+import com.fasterxml.jackson.databind.type.CollectionType;
+import com.fasterxml.jackson.databind.type.SimpleType;
+
+/**
+ * Set of tests to ensure that changes between 2.6 and 2.7 can
+ * be handled somewhat gracefully.
+ */
+public class DeprecatedTypeHandling1102Test extends BaseMapTest
+{
+    static class Point {
+        public int x;
+
+        int _y;
+
+        public void setY(int y0) { _y = y0; }
+        public int getY() { return _y; }
+    }
+
+    final ObjectMapper MAPPER = objectMapper();
+
+    @SuppressWarnings("deprecation")
+    public void testSimplePOJOType() throws Exception
+    {
+        JavaType elem = SimpleType.construct(Point.class);
+
+        Point p = MAPPER.readValue(aposToQuotes("{'x':1,'y':2}"), elem);
+        assertNotNull(p);
+        assertEquals(1, p.x);
+        assertEquals(2, p.getY());
+    }
+    
+    @SuppressWarnings("deprecation")
+    public void testExplicitCollectionType() throws Exception
+    {
+        JavaType elem = SimpleType.construct(Point.class);
+        final String json = aposToQuotes("[ {'x':1,'y':2}, {'x':3,'y':6 }]");
+        
+        JavaType t = CollectionType.construct(List.class, elem);
+        List<Point> l = MAPPER.readValue(json, t);
+        assertNotNull(l);
+        assertEquals(2, l.size());
+        Object ob = l.get(0);
+        assertEquals(Point.class, ob.getClass());
+        Point p = (Point) ob;
+        assertEquals(1, p.x);
+        assertEquals(2, p.getY());
+    }
+}
