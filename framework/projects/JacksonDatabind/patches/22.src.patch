diff --git a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
index 3d939ec..61ebb51 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
@@ -227,12 +227,6 @@ public class ObjectMapper
          */
         public boolean useForType(JavaType t)
         {
-            // 03-Oct-2016, tatu: As per [databind#1395], need to skip
-            //  primitive types too, regardless
-            if (t.isPrimitive()) {
-                return false;
-            }
-
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java
index e5a3e4d..9ca0c7e 100644
--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java
+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java
@@ -69,11 +69,6 @@ public class StdTypeResolverBuilder
             JavaType baseType, Collection<NamedType> subtypes)
     {
         if (_idType == JsonTypeInfo.Id.NONE) { return null; }
-        // 03-Oct-2016, tatu: As per [databind#1395] better prevent use for primitives,
-        //    regardless of setting
-        if (baseType.isPrimitive()) {
-            return null;
-        }
         TypeIdResolver idRes = idResolver(config, baseType, subtypes, true, false);
         switch (_includeAs) {
         case WRAPPER_ARRAY:
@@ -102,11 +97,6 @@ public class StdTypeResolverBuilder
             JavaType baseType, Collection<NamedType> subtypes)
     {
         if (_idType == JsonTypeInfo.Id.NONE) { return null; }
-        // 03-Oct-2016, tatu: As per [databind#1395] better prevent use for primitives,
-        //    regardless of setting
-        if (baseType.isPrimitive()) {
-            return null;
-        }
 
         TypeIdResolver idRes = idResolver(config, baseType, subtypes, false, true);
 
