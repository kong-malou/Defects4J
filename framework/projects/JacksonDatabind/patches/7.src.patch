diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
index 0d01e78..102e0e3 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
@@ -13,7 +13,6 @@ import java.util.TimeZone;
 import java.util.regex.Pattern;
 
 import com.fasterxml.jackson.core.*;
-import com.fasterxml.jackson.core.util.VersionUtil;
 import com.fasterxml.jackson.databind.DeserializationContext;
 import com.fasterxml.jackson.databind.JavaType;
 import com.fasterxml.jackson.databind.JsonMappingException;
@@ -113,10 +112,10 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             }
             Exception cause = null;
             try {
-                // 19-May-2017, tatu: Used to require non-null result (assuming `null`
-                //    indicated error; but that seems wrong. Should be able to return
-                //    `null` as value.
-                return _deserialize(text, ctxt);
+                T result = _deserialize(text, ctxt);
+                if (result != null) {
+                    return result;
+                }
             } catch (IllegalArgumentException iae) {
                 cause = iae;
             } catch (MalformedURLException me) {
@@ -278,8 +277,7 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             case STD_STRING_BUILDER:
                 return new StringBuilder(value);
             }
-            VersionUtil.throwInternal();
-            return null;
+            throw new IllegalArgumentException();
         }
 
         @Override
