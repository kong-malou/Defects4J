diff --git a/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java b/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java
index 8de915b..3795732 100644
--- a/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java
+++ b/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java
@@ -43,18 +43,6 @@ public class Base64InputStreamTest extends TestCase {
     }
 
     /**
-     * Test the Base64InputStream implementation against empty input.
-     *
-     * @throws Exception for some failure scenarios.
-     */    
-    public void testBase64EmptyInputStream() throws Exception {
-        byte[] emptyEncoded = new byte[0];
-        byte[] emptyDecoded = new byte[0];
-        testByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);
-        testByChunk(emptyEncoded, emptyDecoded, 76, CRLF);
-    }
-
-    /**
      * Test the Base64InputStream implementation.
      *
      * @throws Exception for some failure scenarios.
diff --git a/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java b/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java
index 85264f9..2a73dae 100644
--- a/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java
+++ b/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java
@@ -43,23 +43,11 @@ public class Base64OutputStreamTest extends TestCase {
     }
 
     /**
-     * Test the Base64OutputStream implementation against empty input.
-     *
-     * @throws Exception for some failure scenarios.
-     */
-    public void testBase64EmptyOutputStream() throws Exception {
-        byte[] emptyEncoded = new byte[0];
-        byte[] emptyDecoded = new byte[0];
-        testByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);
-        testByChunk(emptyEncoded, emptyDecoded, 76, CRLF);
-    }    
-
-    /**
      * Test the Base64OutputStream implementation
      *
      * @throws Exception for some failure scenarios.
      */
-    public void testBase64OutputStreamByteByByte() throws Exception {
+    public void testBase64InputStreamByteByByte() throws Exception {
         // Hello World test.
         byte[] encoded = "SGVsbG8gV29ybGQ=\r\n".getBytes("UTF-8");
         byte[] decoded = "Hello World".getBytes("UTF-8");
@@ -87,7 +75,7 @@ public class Base64OutputStreamTest extends TestCase {
      *
      * @throws Exception for some failure scenarios.
      */
-    public void testBase64OutputStreamByChunk() throws Exception {
+    public void testBase64InputStreamByChunk() throws Exception {
         // Hello World test.
         byte[] encoded = "SGVsbG8gV29ybGQ=\r\n".getBytes("UTF-8");
         byte[] decoded = "Hello World".getBytes("UTF-8");
diff --git a/src/test/org/apache/commons/codec/binary/Base64Test.java b/src/test/org/apache/commons/codec/binary/Base64Test.java
index a1b6eb0..aaa2f24 100644
--- a/src/test/org/apache/commons/codec/binary/Base64Test.java
+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java
@@ -29,7 +29,7 @@ import org.apache.commons.codec.EncoderException;
 import junit.framework.TestCase;
 
 /**
- * Test cases for Base64 class.
+ * Testcases for Base64 class.
  * 
  * @author Apache Software Foundation
  * @version $Id$
@@ -830,19 +830,6 @@ public class Base64Test extends TestCase {
         }
     }
 
-    /**
-     * Test encode and decode of empty byte array.
-     */
-    public void testEmptyBase64() {
-        byte[] empty = new byte[0];
-        byte[] result = Base64.encodeBase64(empty);
-        assertEquals("empty base64 encode", 0, result.length);
-
-        empty = new byte[0];
-        result = Base64.decodeBase64(empty);        
-        assertEquals("empty base64 decode", 0, result.length);        
-    }
-
     // -------------------------------------------------------- Private Methods
 
     private String toString(byte[] data) {
