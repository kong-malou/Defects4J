diff --git a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
index d1eb77b..c07c668 100644
--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
@@ -134,54 +134,4 @@ public class BaseNCodecInputStream extends FilterInputStream {
         return false; // not an easy job to support marks
     }
 
-    /**
-     * {@inheritDoc}
-     *
-     * @throws IllegalArgumentException if the provided skip length is negative
-     */
-    @Override
-    public long skip(long n) throws IOException {
-        if (n < 0) {
-            throw new IllegalArgumentException("Negative skip length");
-        }
-
-        // skip in chunks of 512 bytes
-        final byte[] b = new byte[512];
-        final int max = (int) Math.min(n, Integer.MAX_VALUE);
-        int total = 0;
-
-        while (total < max) {
-            int len = max - total;
-            if (len > b.length) {
-                len = b.length;
-            }
-            len = read(b, 0, len);
-            if (len == EOF) {
-                break;
-            }
-            total += len;
-        }
-
-        return total;
-    }
-
-    /**
-     * {@inheritDoc}
-     *
-     * @return <code>0</code> if the {@link InputStream} has reached <code>EOF</code>,
-     * <code>1</code> otherwise
-     */
-    public int available() throws IOException {
-        // Note: the logic is similar to the InflaterInputStream:
-        //       as long as we have not reached EOF, indicate that there is more
-        //       data available. As we do not know for sure how much data is left,
-        //       just return 1 as a safe guess.
-
-        // use the EOF flag of the underlying codec instance
-        if (baseNCodec.eof) {
-            return 0;
-        } else {
-            return 1;
-        }
-    }
 }
