diff --git a/guava-tests/test/com/google/common/cache/CacheExpirationTest.java b/guava-tests/test/com/google/common/cache/CacheExpirationTest.java
index ff58cd0..e0c53c6 100644
--- a/guava-tests/test/com/google/common/cache/CacheExpirationTest.java
+++ b/guava-tests/test/com/google/common/cache/CacheExpirationTest.java
@@ -22,7 +22,6 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;
 
 import com.google.common.cache.TestingCacheLoaders.IdentityLoader;
 import com.google.common.cache.TestingRemovalListeners.CountingRemovalListener;
-import com.google.common.cache.TestingRemovalListeners.QueuingRemovalListener;
 import com.google.common.collect.Iterators;
 import com.google.common.testing.FakeTicker;
 import com.google.common.util.concurrent.Callables;
@@ -32,7 +31,6 @@ import junit.framework.TestCase;
 import java.util.List;
 import java.util.Set;
 import java.util.concurrent.ExecutionException;
-import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
@@ -396,22 +394,6 @@ public class CacheExpirationTest extends TestCase {
     assertThat(keySet).containsExactly(3, 6);
   }
 
-  public void testExpiration_invalidateAll() {
-    FakeTicker ticker = new FakeTicker();
-    QueuingRemovalListener<Integer, Integer> listener =
-        TestingRemovalListeners.queuingRemovalListener();
-    Cache<Integer, Integer> cache = CacheBuilder.newBuilder()
-        .expireAfterAccess(1, TimeUnit.MINUTES)
-        .removalListener(listener)
-        .ticker(ticker)
-        .build();
-    cache.put(1, 1);
-    ticker.advance(10, TimeUnit.MINUTES);
-    cache.invalidateAll();
-
-    assertThat(listener.poll().getCause()).isEqualTo(RemovalCause.EXPIRED);
-  }
-
   private void runRemovalScheduler(LoadingCache<String, Integer> cache,
       CountingRemovalListener<String, Integer> removalListener,
       WatchedCreatorLoader loader,
