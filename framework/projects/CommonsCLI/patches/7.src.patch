diff --git a/src/main/java/org/apache/commons/cli/DefaultParser.java b/src/main/java/org/apache/commons/cli/DefaultParser.java
index f823081..c7de0a2 100644
--- a/src/main/java/org/apache/commons/cli/DefaultParser.java
+++ b/src/main/java/org/apache/commons/cli/DefaultParser.java
@@ -136,7 +136,7 @@ public class DefaultParser implements CommandLineParser
      *
      * @param properties The value properties to be processed.
      */
-    private void handleProperties(Properties properties) throws ParseException
+    private void handleProperties(Properties properties)
     {
         if (properties == null)
         {
@@ -169,8 +169,7 @@ public class DefaultParser implements CommandLineParser
                     continue;
                 }
                 
-                handleOption(opt);
-                currentOption = null;
+                cmd.addOption(opt);
             }
         }
     }
diff --git a/src/main/java/org/apache/commons/cli/Parser.java b/src/main/java/org/apache/commons/cli/Parser.java
index eecfb82..c106932 100644
--- a/src/main/java/org/apache/commons/cli/Parser.java
+++ b/src/main/java/org/apache/commons/cli/Parser.java
@@ -249,7 +249,7 @@ public abstract class Parser implements CommandLineParser
      *
      * @param properties The value properties to be processed.
      */
-    protected void processProperties(Properties properties) throws ParseException
+    protected void processProperties(Properties properties)
     {
         if (properties == null)
         {
@@ -291,7 +291,6 @@ public abstract class Parser implements CommandLineParser
                 }
 
                 cmd.addOption(opt);
-                updateRequiredOptions(opt);
             }
         }
     }
@@ -377,27 +376,7 @@ public abstract class Parser implements CommandLineParser
 
         // get the option represented by arg
         Option opt = (Option) getOptions().getOption(arg).clone();
-        
-        // update the required options and groups
-        updateRequiredOptions(opt);
-        
-        // if the option takes an argument value
-        if (opt.hasArg())
-        {
-            processArgs(opt, iter);
-        }
-        
-        // set the option on the command line
-        cmd.addOption(opt);
-    }
 
-    /**
-     * Removes the option or its group from the list of expected elements.
-     * 
-     * @param opt
-     */
-    private void updateRequiredOptions(Option opt) throws ParseException
-    {
         // if the option is a required option remove the option from
         // the requiredOptions list
         if (opt.isRequired())
@@ -418,5 +397,14 @@ public abstract class Parser implements CommandLineParser
 
             group.setSelected(opt);
         }
+
+        // if the option takes an argument value
+        if (opt.hasArg())
+        {
+            processArgs(opt, iter);
+        }
+
+        // set the option on the command line
+        cmd.addOption(opt);
     }
 }
